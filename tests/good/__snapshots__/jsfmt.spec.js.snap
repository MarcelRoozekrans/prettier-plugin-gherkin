// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`background.feature 1`] = `
Feature: Background

  Background: a simple background
    Given the minimalism inside a background


  Scenario: minimalistic
    Given the minimalism

  Scenario: also minimalistic
    Given the minimalism
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: Background

    Background : a simple background
        Given the minimalism inside a background

    Scenario: minimalistic
        Given the minimalism

    Scenario: also minimalistic
        Given the minimalism

`;

exports[`datatables.feature 1`] = `
Feature: DataTables

  Scenario: minimalistic
    Given a simple data table
      | foo | bar |
      | boz | boo |
    And a data table with a single cell
      | foo |
    And a data table with different fromatting
      |   foo|bar|    boz    |    
    And a data table with an empty cell
      |foo||boz|
    And a data table with comments and newlines inside
      | foo | bar |

      | boz  | boo  |
      # this is a comment
      | boz2 | boo2 |

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: DataTables

    Scenario: minimalistic
        Given a simple data table
            | foo | bar |
            | boz | boo |
        And a data table with a single cell
            | foo |
        And a data table with different fromatting
            | foo | bar | boz |
        And a data table with an empty cell
            | foo |  | boz |
        And a data table with comments and newlines inside
            | foo  | bar  |
            | boz  | boo  |
            | boz2 | boo2 |

`;

exports[`datatables_with_new_lines.feature 1`] = `
Feature: DataTables

  Scenario: some whitespace is important
    Given 3 lines of poetry on 5 lines
      |  \\nraindrops--\\nher last kiss\\ngoodbye.\\r\\n  |
    Given an example of negative space
      |        lost        i n        space        |

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: DataTables

    Scenario: some whitespace is important
        Given 3 lines of poetry on 5 lines
            | \\nraindrops--\\nher last kiss\\ngoodbye.\\r\\n |

        Given an example of negative space
            | lost        i n        space |

`;

exports[`docstrings.feature 1`] = `
Feature: DocString variations

  Scenario: minimalistic
    Given a simple DocString
      """
      first line (no indent)
        second line (indented with two spaces)

      third line was empty
      """
    Given a DocString with content type
      """xml
      <foo>
        <bar />
      </foo>
      """
    And a DocString with wrong indentation
      """
    wrongly indented line
      """
    And a DocString with alternative separator
      \`\`\`
      first line
      second line
      \`\`\`
    And a DocString with normal separator inside
      \`\`\`
      first line
      """
      third line
      \`\`\`
    And a DocString with alternative separator inside
      """
      first line
      \`\`\`
      third line
      """
    And a DocString with escaped separator inside
      """
      first line
      \\"\\"\\"
      third line
      """
    And a DocString with an escaped alternative separator inside
      \`\`\`
      first line
      \\\`\\\`\\\`
      third line
      \`\`\`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: DocString variations

    Scenario: minimalistic
        Given a simple DocString
            """
            first line (no indent)
              second line (indented with two spaces)

            third line was empty
            """

        Given a DocString with content type
            """
            <foo>
                <bar />
            </foo>
            """
        And a DocString with wrong indentation
            """
            wrongly indented line
            """
        And a DocString with alternative separator
            \`\`\`
            first line
            second line
            \`\`\`
        And a DocString with normal separator inside
            \`\`\`
            first line
            """
            third line
            \`\`\`
        And a DocString with alternative separator inside
            """
            first line
            \`\`\`
            third line
            """
        And a DocString with escaped separator inside
            """
            first line
            \\"\\"\\"
            third line
            """
        And a DocString with an escaped alternative separator inside
            \`\`\`
            first line
            \\\`\\\`\\\`
            third line
            \`\`\`

`;

exports[`example_token_multiple.feature 1`] = `
Feature: Example token used multiple times

  Scenario Outline: Token used twice in a single step
    Given <what> <what>

    Examples:
      | what  |
      | usage |

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: Example token used multiple times

    Scenario Outline: Token used twice in a single step
        Given <what> <what>

        Examples:
            | what  |
            | usage |

`;

exports[`example_tokens_everywhere.feature 1`] = `
Feature: Example tokens everywhere

  Scenario Outline: the <one>
    Given the <two>:
      """
      <three>
      """
    Given the <four>:
      | <five> |

    Examples:
      | one | two  | three | four   | five  |
      | un  | deux | trois | quatre | cinq  |
      | uno | dos  | tres  | quatro | cinco |

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: Example tokens everywhere

    Scenario Outline: the <one>
        Given the <two>:
            """
            <three>
            """

        Given the <four>:
            | <five> |

        Examples:
            | one | two  | three | four   | five  |
            | un  | deux | trois | quatre | cinq  |
            | uno | dos  | tres  | quatro | cinco |

`;

exports[`minimal.feature 1`] = `
Feature: Minimal

  Scenario: minimalistic
    Given the minimalism
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: Minimal

    Scenario: minimalistic
        Given the minimalism

`;

exports[`padded_example.feature 1`] = `
Feature: test

  Scenario: test
    Given a <color> ball with:
      | type     | diameter |
      | football |       69 |
      |   pool   |      5.6 |


    # The "red" cell below has the following whitespace characters on each side:
    # - U+00A0 (non-breaking space)
    # - U+0020 (space)
    # - U+0009 (tab)
    # This is generated with \`ruby -e 'STDOUT.write "\\u00A0\\u0020\\u0009".encode("utf-8")' | pbcopy\`
    # and pasted. 
    Examples:
      | color   |
      |  	red  	|

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: test

    Scenario: test
        Given a <color> ball with:
            | type     | diameter |
            | football | 69       |
            | pool     | 5.6      |

        Examples:
            | color |
            | red   |

`;

exports[`readme_example.feature 1`] = `
@a
Feature:
  @b @c
  Scenario Outline:
    Given <x>

    Examples:
      | x |
      | y |

  @d @e
  Scenario Outline:
    Given <m>

    @f
    Examples:
      | m |
      | n |

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@a
Feature:

    @b
    @c
    Scenario Outline:
        Given <x>

        Examples:
            | x |
            | y |

    @d
    @e
    Scenario Outline:
        Given <m>

        @f
        Examples:
            | m |
            | n |

`;

exports[`several_examples.feature 1`] = `
Feature: Tagged Examples

  Scenario Outline: minimalistic
    Given the <what>

    @foo
    Examples:
      | what |
      | foo  |

    @bar
    Examples:
      | what |
      | bar  |

  @zap
  Scenario: ha ok

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Feature: Tagged Examples

    Scenario Outline: minimalistic
        Given the <what>

        @foo
        Examples:
            | what |
            | foo  |

        @bar
        Examples:
            | what |
            | bar  |

    @zap
    Scenario: ha ok


`;
